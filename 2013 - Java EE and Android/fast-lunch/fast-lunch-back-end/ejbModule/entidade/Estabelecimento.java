package entidade;

// Generated 15/09/2013 23:36:41 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Estabelecimento generated by hbm2java
 */
@Entity
@Table(name = "tb_estabelecimento", catalog = "dbfastlunch", 
uniqueConstraints = @UniqueConstraint(columnNames = "cnpj"))
@NamedQuery(name="Estabelecimento.buscaPorCnpj", 
			query="select e FROM " +
			"Estabelecimento e WHERE e.cnpj = :cnpj")
public class Estabelecimento implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_ESTABELECIMENTO_POR_CNPJ = 
			"Estabelecimento.buscaPorCnpj";
	
	private Long idEstabelecimento;
	private Estabelecimento estabelecimento;
	private String razaoSocial;
	private String nomeFantasia;
	private String cnpj;
	private String telefone;
	private String email;
	private char tipoEstabelecimento;
	private Boolean ativo;
	private Set<Cargo> cargos = new HashSet<Cargo>(0);
	private Set<Estabelecimento> estabelecimentos = new HashSet<Estabelecimento>(
			0);
	private Set<HorarioFuncionamentoEstabelecimento> horarioFuncionamentoEstabelecimentos = new HashSet<HorarioFuncionamentoEstabelecimento>(
			0);
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);
	private Set<Frete> fretes = new HashSet<Frete>(0);
	private Set<TipoPagamento> tipoPagamentos = new HashSet<TipoPagamento>(0);
	private Set<HorarioFuncionamentoDelivery> horarioFuncionamentoDeliveries = 
			new HashSet<HorarioFuncionamentoDelivery>(0);
	private Set<TipoCardapio> tipoCardapios = 
			new HashSet<TipoCardapio>(0);
	private Endereco endereco;

	public Estabelecimento() {
	}

	public Estabelecimento(String razaoSocial, String cnpj, String telefone,
			String email, char tipoEstabelecimento) {
		this.razaoSocial = razaoSocial;
		this.cnpj = cnpj;
		this.telefone = telefone;
		this.email = email;
		this.tipoEstabelecimento = tipoEstabelecimento;
	}

	public Estabelecimento(
			Estabelecimento estabelecimento,
			String razaoSocial,
			String nomeFantasia,
			String cnpj,
			String telefone,
			String email,
			char tipoEstabelecimento,
			Boolean ativo,
			Set<Cargo> cargos,
			Set<Estabelecimento> estabelecimentos,
			Set<HorarioFuncionamentoEstabelecimento> horarioFuncionamentoEstabelecimentos,
			Set<Pedido> pedidos,
			Set<Frete> fretes,
			Set<TipoPagamento> tipoPagamentos,
			Set<HorarioFuncionamentoDelivery> horarioFuncionamentoDeliveries,
			Set<TipoCardapio> tipoCardapios,
			Endereco endereco
			) {
		this.estabelecimento = estabelecimento;
		this.razaoSocial = razaoSocial;
		this.nomeFantasia = nomeFantasia;
		this.cnpj = cnpj;
		this.telefone = telefone;
		this.email = email;
		this.tipoEstabelecimento = tipoEstabelecimento;
		this.ativo = ativo;
		this.cargos = cargos;
		this.estabelecimentos = estabelecimentos;
		this.horarioFuncionamentoEstabelecimentos = horarioFuncionamentoEstabelecimentos;
		this.pedidos = pedidos;
		this.fretes = fretes;
		this.tipoPagamentos = tipoPagamentos;
		this.horarioFuncionamentoDeliveries = horarioFuncionamentoDeliveries;
		this.tipoCardapios = tipoCardapios;
		this.endereco = endereco;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_estabelecimento", unique = true, nullable = false)
	public Long getIdEstabelecimento() {
		return this.idEstabelecimento;
	}

	public void setIdEstabelecimento(Long idEstabelecimento) {
		this.idEstabelecimento = idEstabelecimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_matriz")
	public Estabelecimento getEstabelecimento() {
		return this.estabelecimento;
	}

	public void setEstabelecimento(Estabelecimento estabelecimento) {
		this.estabelecimento = estabelecimento;
	}

	@Column(name = "razao_social", nullable = false, length = 150)
	public String getRazaoSocial() {
		return this.razaoSocial;
	}

	public void setRazaoSocial(String razaoSocial) {
		this.razaoSocial = razaoSocial;
	}

	@Column(name = "nome_fantasia", length = 150)
	public String getNomeFantasia() {
		return this.nomeFantasia;
	}

	public void setNomeFantasia(String nomeFantasia) {
		this.nomeFantasia = nomeFantasia;
	}

	@Column(name = "cnpj", unique = true, nullable = false)
	public String getCnpj() {
		return this.cnpj;
	}

	public void setCnpj(String cnpj) {
		this.cnpj = cnpj;
	}

	@Column(name = "telefone", nullable = false, length = 11)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "email", nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "tipo_estabelecimento", nullable = false, length = 1)
	public char getTipoEstabelecimento() {
		return this.tipoEstabelecimento;
	}

	public void setTipoEstabelecimento(char tipoEstabelecimento) {
		this.tipoEstabelecimento = tipoEstabelecimento;
	}

	@Column(name = "ativo")
	public Boolean getAtivo() {
		return this.ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "estabelecimento")
	public Set<Cargo> getCargos() {
		return this.cargos;
	}

	public void setCargos(Set<Cargo> cargos) {
		this.cargos = cargos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estabelecimento")
	public Set<Estabelecimento> getEstabelecimentos() {
		return this.estabelecimentos;
	}

	public void setEstabelecimentos(Set<Estabelecimento> estabelecimentos) {
		this.estabelecimentos = estabelecimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estabelecimento")
	public Set<HorarioFuncionamentoEstabelecimento> getHorarioFuncionamentoEstabelecimentos() {
		return this.horarioFuncionamentoEstabelecimentos;
	}

	public void setHorarioFuncionamentoEstabelecimentos(
			Set<HorarioFuncionamentoEstabelecimento> horarioFuncionamentoEstabelecimentos) {
		this.horarioFuncionamentoEstabelecimentos = horarioFuncionamentoEstabelecimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estabelecimento")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "estabelecimento")
	public Set<Frete> getFretes() {
		return this.fretes;
	}

	public void setFretes(Set<Frete> fretes) {
		this.fretes = fretes;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "estabelecimento")
	public Set<TipoPagamento> getTipoPagamentos() {
		return this.tipoPagamentos;
	}

	public void setTipoPagamentos(Set<TipoPagamento> tipoPagamentos) {
		this.tipoPagamentos = tipoPagamentos;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "estabelecimento")
	public Set<HorarioFuncionamentoDelivery> getHorarioFuncionamentoDeliveries() {
		return horarioFuncionamentoDeliveries;
	}

	public void setHorarioFuncionamentoDeliveries(
			Set<HorarioFuncionamentoDelivery> horarioFuncionamentoDeliveries) {
		this.horarioFuncionamentoDeliveries = horarioFuncionamentoDeliveries;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "estabelecimento")
	public Set<TipoCardapio> getTipoCardapios() {
		return tipoCardapios;
	}

	public void setTipoCardapios(Set<TipoCardapio> tipoCardapios) {
		this.tipoCardapios = tipoCardapios;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade=CascadeType.ALL)
	@JoinColumn(name = "id_endereco", nullable = false)
	public Endereco getEndereco() {
		return endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

}
