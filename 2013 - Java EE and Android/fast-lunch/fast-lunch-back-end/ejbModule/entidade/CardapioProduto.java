package entidade;

// Generated 17/09/2013 17:24:37 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CardapioProduto generated by hbm2java
 */
@Entity
@Table(name = "tb_cardapio_produto", catalog = "dbfastlunch")
@NamedQueries({
	@NamedQuery(name="CardapioProduto.buscaProdutosPorEstabelecimento",
			query="SELECT cp" +
					" FROM CardapioProduto cp" +
					" WHERE cp.cardapio.tipoCardapio." +
					"estabelecimento.idEstabelecimento = :idEstabelecimento" +
					" AND cp.ativo = true" +
					" AND cp.produto.ativo = true"),

	@NamedQuery(name="CardapioProduto.buscaProdutoPorNome",
			query="SELECT cp" +
					" FROM CardapioProduto cp" +
					" WHERE cp.cardapio.tipoCardapio." +
					"estabelecimento.idEstabelecimento = :idEstabelecimento" +
					" AND cp.ativo = true" +
					" AND cp.produto.ativo = true" +
					" AND cp.produto.nome = :nomeProduto"),
	@NamedQuery(name="CardapioProduto.buscaProdutoPorNomeECardapio",
			query="SELECT cp" +
					" FROM CardapioProduto cp" +
					" WHERE cp.cardapio.tipoCardapio." +
					"estabelecimento.idEstabelecimento = :idEstabelecimento" +
					" AND cp.cardapio.nome = :nomeCardapio" +
					" AND cp.produto.nome = :nomeProduto" +
					" AND cp.produto.ativo = true" +
					" AND cp.ativo = true"),
					
	@NamedQuery(name="CardapioProduto.buscaProdutoPorCardapio",
	query="SELECT cp" +
			" FROM CardapioProduto cp" +
			" WHERE cp.cardapio.tipoCardapio." +
			"estabelecimento.idEstabelecimento = :idEstabelecimento" +
			" AND cp.cardapio.nome = :nomeCardapio" +
			" AND cp.produto.ativo = true" +
			" AND cp.ativo = true"
			)	
})
public class CardapioProduto implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_PRODUTOS_POR_ESTABELECIMENTO = 
			"CardapioProduto.buscaProdutosPorEstabelecimento";
	public static final String BUSCA_PRODUTO_POR_NOME = 
			"CardapioProduto.buscaProdutoPorNome";

	public static final String BUSCA_PRODUTO_POR_NOME_E_CARDAPIO = 
			"CardapioProduto.buscaProdutoPorNomeECardapio";
	
	public static final String BUSCA_PRODUTO_POR_CARDAPIO = 
			"CardapioProduto.buscaProdutoPorCardapio";
	
	private Long idcardapioProduto;
	private Produto produto;
	private Cardapio cardapio;
	private Boolean ativo;
	private Set<ItemPedido> itemPedidos = new HashSet<ItemPedido>(0);

	public CardapioProduto() {
	}

	public CardapioProduto(Produto produto, Cardapio cardapio) {
		this.produto = produto;
		this.cardapio = cardapio;
	}

	public CardapioProduto(Produto produto, Cardapio cardapio,
			Boolean ativo, Set<ItemPedido> itemPedidos) {
		this.produto = produto;
		this.cardapio = cardapio;
		this.ativo = ativo;
		this.itemPedidos = itemPedidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idcardapio_produto", unique = true, nullable = false)
	public Long getIdcardapioProduto() {
		return this.idcardapioProduto;
	}

	public void setIdcardapioProduto(Long idcardapioProduto) {
		this.idcardapioProduto = idcardapioProduto;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade={CascadeType.MERGE, CascadeType.PERSIST})
	@JoinColumn(name = "id_produto", nullable = false)
	public Produto getProduto() {
		return this.produto;
	}

	public void setProduto(Produto produto) {
		this.produto = produto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_cardapio", nullable = false)
	public Cardapio getCardapio() {
		return this.cardapio;
	}

	public void setCardapio(Cardapio cardapio) {
		this.cardapio = cardapio;
	}

	@Column(name = "ativo")
	public Boolean getAtivo() {
		return this.ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cardapioProduto")
	public Set<ItemPedido> getItemPedidos() {
		return this.itemPedidos;
	}

	public void setItemPedidos(Set<ItemPedido> itemPedidos) {
		this.itemPedidos = itemPedidos;
	}

}
