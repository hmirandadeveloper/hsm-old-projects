package entidade;

// Generated 15/09/2013 23:36:41 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * Cargo generated by hbm2java
 */
@Entity
@Table(name = "tb_cargo", catalog = "dbfastlunch")

@NamedQueries({
	@NamedQuery(name="Cargo.buscaPorDescricao", 
				query="SELECT c " +
				"FROM Cargo c, Estabelecimento e " +
				"WHERE c.descricao = :descricao" +
				" AND c.estabelecimento.idEstabelecimento = e.idEstabelecimento" + 
				" AND e.idEstabelecimento = :id_estabelecimento" +
				" AND c.ativo = true"),
				
	@NamedQuery(name="Cargo.buscaTodosPorEstabelecimento",
	query="SELECT c " +
	"FROM Cargo c, Estabelecimento e " +
	"WHERE c.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
	" AND e.idEstabelecimento = :id_estabelecimento" +
	" AND c.ativo = true")
})
public class Cargo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_CARGO_POR_DESCRICAO = "Cargo.buscaPorDescricao";
	public static final String BUSCA_CARGOS_POR_ESTABELECIMENTO = "Cargo.buscaTodosPorEstabelecimento";
	
	private Long idCargo;
	private Estabelecimento estabelecimento;
	private String descricao;
	private Boolean ativo;
	private Set<Funcionario> funcionarios = new HashSet<Funcionario>(0);

	public Cargo() {
	}

	public Cargo(Estabelecimento estabelecimento, String descricao) {
		this.estabelecimento = estabelecimento;
		this.descricao = descricao;
	}

	public Cargo(Estabelecimento estabelecimento, String descricao,
			Boolean ativo, Set<Funcionario> funcionarios) {
		this.estabelecimento = estabelecimento;
		this.descricao = descricao;
		this.ativo = ativo;
		this.funcionarios = funcionarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_cargo", unique = true, nullable = false)
	public Long getIdCargo() {
		return this.idCargo;
	}

	public void setIdCargo(Long idCargo) {
		this.idCargo = idCargo;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade={CascadeType.PERSIST, CascadeType.MERGE})
	@JoinColumn(name = "id_estabelecimento", nullable = false)
	public Estabelecimento getEstabelecimento() {
		return this.estabelecimento;
	}

	public void setEstabelecimento(Estabelecimento estabelecimento) {
		this.estabelecimento = estabelecimento;
	}

	@Column(name = "descricao", nullable = false, length = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "ativo")
	public Boolean getAtivo() {
		return this.ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cargo")
	public Set<Funcionario> getFuncionarios() {
		return this.funcionarios;
	}

	public void setFuncionarios(Set<Funcionario> funcionarios) {
		this.funcionarios = funcionarios;
	}

}
