package entidade;

// Generated 15/09/2013 23:36:41 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cardapio generated by hbm2java
 */
@Entity
@Table(name = "tb_cardapio", catalog = "dbfastlunch")
@NamedQueries ({
	@NamedQuery(name="Cardapio.buscaPorNome",
			query="SELECT c " +
					"FROM Cardapio c, TipoCardapio tc, Estabelecimento e " +
					"WHERE c.nome = :nome" +
					" AND c.tipoCardapio.idTipoCardapio = tc.idTipoCardapio" +
					" AND tc.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
					" AND e.idEstabelecimento = :idEstabelecimento" +
					" AND c.validade >= :dataAtual"),
	@NamedQuery(name="Cardapio.buscaCardapiosPorEstabelecimento",
			query="SELECT c " +
					"FROM Cardapio c, TipoCardapio tc, Estabelecimento e " +
					"WHERE c.tipoCardapio.idTipoCardapio = tc.idTipoCardapio" +
					" AND tc.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
					" AND e.idEstabelecimento = :idEstabelecimento" +
					" AND c.validade >= :dataAtual")
})
public class Cardapio implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_CARDAPIO_POR_NOME = "Cardapio.buscaPorNome";
	public static final String BUSCA_CARDAPIOS_POR_ESTABELECIMENTO = "Cardapio.buscaCardapiosPorEstabelecimento";
	
	private Long idCardapio;
	private String nome;
	private TipoCardapio tipoCardapio;
	private Date validade;
	private Set<CardapioProduto> cardapioProdutos = new HashSet<CardapioProduto>(
			0);

	public Cardapio() {
	}

	public Cardapio(String nome,
			TipoCardapio tipoCardapio) {
		this.nome = nome;
		this.tipoCardapio = tipoCardapio;
	}

	public Cardapio(String nome,
			TipoCardapio tipoCardapio, Date validade,
			Set<CardapioProduto> tbCardapioProdutos) {
		this.nome = nome;
		this.tipoCardapio = tipoCardapio;
		this.validade = validade;
		this.cardapioProdutos = tbCardapioProdutos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_cardapio", unique = true, nullable = false)
	public Long getIdCardapio() {
		return this.idCardapio;
	}

	public void setIdCardapio(Long idCardapio) {
		this.idCardapio = idCardapio;
	}
	
	@Column(name = "nome", nullable = false, length = 150)
	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade=CascadeType.MERGE)
	@JoinColumn(name = "id_tipo_cardapio", nullable = false)
	public TipoCardapio getTipoCardapio() {
		return this.tipoCardapio;
	}

	public void setTipoCardapio(TipoCardapio tipoCardapio) {
		this.tipoCardapio = tipoCardapio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validade", length = 10)
	public Date getValidade() {
		return this.validade;
	}

	public void setValidade(Date validade) {
		this.validade = validade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cardapio")
	public Set<CardapioProduto> getCardapioProdutos() {
		return this.cardapioProdutos;
	}

	public void setCardapioProdutos(Set<CardapioProduto> cardapioProdutos) {
		this.cardapioProdutos = cardapioProdutos;
	}

}
