package entidade;

// Generated 15/09/2013 23:36:41 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TipoCardapio generated by hbm2java
 */
@Entity
@Table(name = "tb_tipo_cardapio", catalog = "dbfastlunch")
@NamedQueries({
	@NamedQuery(name="TipoCardapio.buscaPorNome",
			query="SELECT tc " +
					"FROM TipoCardapio tc, Estabelecimento e " +
					"WHERE tc.nome = :nome" +
					" AND tc.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
					" AND e.idEstabelecimento = :idEstabelecimento" +
					" AND tc.ativo = true"),
	@NamedQuery(name="TipoCardapio.buscaTipoCardapiosPorEstabelecimento",
			query="SELECT tc " +
					"FROM TipoCardapio tc, Estabelecimento e " +
					"WHERE tc.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
					" AND e.idEstabelecimento = :idEstabelecimento" +
					" AND tc.ativo = true")
})
public class TipoCardapio implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_TIPO_CARDAPIO_POR_NOME = "TipoCardapio.buscaPorNome";
	public static final String BUSCA_TIPO_CARDAPIOS_POR_ESTABELECIMENTO = "TipoCardapio.buscaTipoCardapiosPorEstabelecimento";
	
	private Long idTipoCardapio;
	private String nome;
	private String descricao;
	private Set<Cardapio> tbCardapios = new HashSet<Cardapio>(0);
	private Estabelecimento estabelecimento;
	private boolean ativo;

	public TipoCardapio() {
	}

	public TipoCardapio(String nome, String descricao) {
		this.nome = nome;
		this.descricao = descricao;
	}

	public TipoCardapio(String nome, String descricao,
			Set<Cardapio> tbCardapios,
			Estabelecimento estabelecimento, boolean ativo) {
		this.nome = nome;
		this.descricao = descricao;
		this.tbCardapios = tbCardapios;
		this.setEstabelecimento(estabelecimento);
		this.ativo = ativo;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_tipo_cardapio", unique = true, nullable = false)
	public Long getIdTipoCardapio() {
		return this.idTipoCardapio;
	}

	public void setIdTipoCardapio(Long idTipoCardapio) {
		this.idTipoCardapio = idTipoCardapio;
	}

	@Column(name = "nome", nullable = false, length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "descricao", nullable = false, length = 150)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tipoCardapio")
	public Set<Cardapio> getCardapios() {
		return this.tbCardapios;
	}

	public void setCardapios(Set<Cardapio> tbCardapios) {
		this.tbCardapios = tbCardapios;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_estabelecimento",nullable = false)
	public Estabelecimento getEstabelecimento() {
		return estabelecimento;
	}

	public void setEstabelecimento(Estabelecimento estabelecimento) {
		this.estabelecimento = estabelecimento;
	}
	
	@Column(name = "ativo")
	public boolean isAtivo() {
		return ativo;
	}

	public void setAtivo(boolean ativo) {
		this.ativo = ativo;
	}
}
