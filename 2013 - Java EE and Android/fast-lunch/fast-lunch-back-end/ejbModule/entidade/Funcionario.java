package entidade;

// Generated 15/09/2013 23:36:41 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name = "tb_funcionario", catalog = "dbfastlunch", uniqueConstraints = @UniqueConstraint(columnNames = "matricula"))
@NamedQueries({
	@NamedQuery(name="Funcionario.buscaPorMatricula",
				query="SELECT f " +
				"FROM Funcionario f, Cargo c, Estabelecimento e " +
				"WHERE f.matricula = :matricula" +
				" AND f.cargo.idCargo = c.idCargo" +
				" AND c.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
				" AND e.idEstabelecimento = :id_estabelecimento" +
				" AND f.ativo = true"),
			
	@NamedQuery(name="Funcionario.buscaPorUsuario",
				query="SELECT f " +
				"FROM Funcionario f, Usuario u " +
				"WHERE f.usuario.idUsuario = u.idUsuario" +
				" AND u.idUsuario = :id_usuario" +
				" AND f.ativo = true"),
	
	@NamedQuery(name="Funcionario.buscaTodosPorEstabelecimento",
	query="SELECT f " +
	"FROM Funcionario f, Cargo c, Estabelecimento e " +
	"WHERE f.cargo.idCargo = c.idCargo" +
	" AND c.estabelecimento.idEstabelecimento = e.idEstabelecimento" +
	" AND e.idEstabelecimento = :id_estabelecimento" +
	" AND f.ativo = true")
})
public class Funcionario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String BUSCA_FUNCIONARIO_POR_MATRICULA = "Funcionario.buscaPorMatricula";
	public static final String BUSCA_FUNCIONARIO_POR_USUARIO = "Funcionario.buscaPorUsuario";
	public static final String BUSCA_FUNCIONARIOS_POR_ESTABELECIMENTO = "Funcionario.buscaTodosPorEstabelecimento";
	
	private Long idFuncionario;
	private Usuario usuario;
	private Cargo cargo;
	private String nome;
	private String sobrenome;
	private String matricula;
	private Boolean ativo;
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);

	public Funcionario() {
	}

	public Funcionario(Usuario usuario, Cargo cargo, String nome,
			String sobrenome, String matricula) {
		this.usuario = usuario;
		this.cargo = cargo;
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.matricula = matricula;
	}

	public Funcionario(Usuario usuario, Cargo cargo, String nome,
			String sobrenome, String matricula, Boolean ativo,
			Set<Pedido> pedidos) {
		this.usuario = usuario;
		this.cargo = cargo;
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.matricula = matricula;
		this.ativo = ativo;
		this.pedidos = pedidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_funcionario", unique = true, nullable = false)
	public Long getIdFuncionario() {
		return this.idFuncionario;
	}

	public void setIdFuncionario(Long idFuncionario) {
		this.idFuncionario = idFuncionario;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@JoinColumn(name = "id_usuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_cargo", nullable = false)
	public Cargo getCargo() {
		return this.cargo;
	}

	public void setCargo(Cargo cargo) {
		this.cargo = cargo;
	}

	@Column(name = "nome", nullable = false, length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "sobrenome", nullable = false, length = 150)
	public String getSobrenome() {
		return this.sobrenome;
	}

	public void setSobrenome(String sobrenome) {
		this.sobrenome = sobrenome;
	}

	@Column(name = "matricula", unique = true, nullable = false, length = 15)
	public String getMatricula() {
		return this.matricula;
	}

	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}

	@Column(name = "ativo")
	public Boolean getAtivo() {
		return this.ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}

}
